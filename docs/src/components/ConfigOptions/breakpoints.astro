<!-- prettier-ignore -->
<Markdown is:raw>
  ### `breakpoints`

  **Type:** `number[] | { count?: number; minWidth?: number; maxWidth?: number }`

  **Default:** `undefined`

  An array of widths in pixels to generate image sets for. If not provided, the breakpoints
  will be calculated automatically.

  If an object is passed then the breakpoints will be calculated automatically based
  on the values of the `count`,
  `minWidth`, and `maxWidth` properties. The `count` property is to specify the number
  of breakpoints to generate. The `minWidth` and `maxWidth` properties are to specify
  the widths to generate in the range between their values.

  When an object is passed or the `breakpoints` prop is not provided, the breakpoints
  are calculated using a simple formula/algorithm. Instead of explaining the complete
  algorithm here, I am linking to the [code](https://github.com/RafidMuhymin/astro-imagetools/blob/main/packages/astro-imagetools/api/utils/getBreakpoints.js).

  **Code example:**
</Markdown>

<CodeExample
  {...Astro.props}
  values={[
    "number[] type",
    {
      src: "https://picsum.photos/1600/900",
      alt: "A random image",
      breakpoints: `[200, 400, 800, 1600]`,
    },
    "",
    "{ count?: number; minWidth?: number; maxWidth?: number } type",
    {
      src: "https://picsum.photos/1024/768",
      alt: "A random image",
      breakpoints: `{ count: 3, minWidth: 300, maxWidth: 1024 }`,
      comment:
        "three breakpoints will be generated ranging from 300px to 1024px",
    },
  ]}
/>
